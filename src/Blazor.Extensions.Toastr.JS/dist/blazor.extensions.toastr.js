!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(1),n(2).ToastrService.initialize()},function(e,t,n){"use strict";"undefined"==typeof window||window.BlazorExtensions||(window.BlazorExtensions={})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(3),i=function(){function e(){}return e.initialize=function(){var e=window.Blazor,t=document.createElement("div");t.id="vanillatoasts-container",document.body.appendChild(t),e.registerFunction("Blazor.Extensions.Toastr.Create",function(e){var n=document.createElement("div");if(n.className="vanillatoasts-toast",e.title){var i=document.createElement("h4");i.className="vanillatoasts-title",i.innerHTML=e.title,n.appendChild(i)}if(e.text){var r=document.createElement("p");r.className="vanillatoasts-text",r.innerHTML=e.text,n.appendChild(r)}if(e.icon){var a=document.createElement("img");a.src=e.icon,a.className="vanillatoasts-icon",n.appendChild(a)}function l(){t.removeChild(n)}return console.log("type: "+o.ToastType[e.type]),console.log("type: "+e.type),console.log(e),e.type&&(n.className+=" vanillatoasts-"+o.ToastType[e.type].toLowerCase()),"function"==typeof e.callback&&n.addEventListener("click",e.callback),n.hide=function(){n.className+=" vanillatoasts-fadeOut",n.addEventListener("animationend",l,!1)},e.timeout&&setTimeout(n.hide,e.timeout),n.addEventListener("click",n.hide),t&&t.appendChild(n),n})},e}();t.ToastrService=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Info=1]="Info",e[e.Success=2]="Success",e[e.Warning=3]="Warning",e[e.Error=4]="Error"}(t.ToastType||(t.ToastType={}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,